[tool.poetry]
name = "knowledge-graph"
version = "0.1.0"
description = ""
authors = ["Ben Chambers <35960+bjchambers@users.noreply.github.com>"]
readme = "README.md"
packages = [{include = "knowledge_graph"}]
include = [
    { path = "knowledge_graph/prompt_templates/*.md", format = ["sdist", "wheel"] }
]


[tool.poetry.dependencies]
python = "^3.10"
langchain = "^0.1.14"
langchain-community = "^0.0.31"
langchain-openai = "^0.1.1"
langchain-experimental = "^0.0.56"
cassio = "^0.1.5"
graphviz = "^0.20.3"


[tool.poetry.group.dev.dependencies]
python-dotenv = "^1.0.1"
ipykernel = "^6.29.4"
ruff = "^0.3.5"
testcontainers = "~3.7.1"
pytest = "^8.1.1"
precisely = "^0.1.9"
pytest-asyncio = "^0.23.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 98

# Assume Python 3.11.
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes `E` and `F` codes by default.
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I001",
]
ignore = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"